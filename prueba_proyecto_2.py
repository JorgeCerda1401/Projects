# -*- coding: utf-8 -*-
"""Prueba_Proyecto_2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OiheVGFpwVtY3pxmYk--hqRCithi8VyU
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import nltk
import seaborn as sns

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics import roc_auc_score, roc_curve, confusion_matrix, precision_score, recall_score
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.utils.multiclass import unique_labels

df = pd.read_csv('spam_ham_dataset.csv')




X_train, X_test, Y_train, Y_test = train_test_split(df['text'],
                                                    df['label_num'],
                                                    random_state=0)
vectorizer = CountVectorizer(ngram_range=(1, 2)).fit(X_train)
X_train_vectorized = vectorizer.transform(X_train)
X_train_vectorized.toarray().shape
model = MultinomialNB(alpha=0.1)
model.fit(X_train_vectorized, Y_train)
predictions = model.predict(vectorizer.transform(X_test))

train_predictions = model.predict(X_train_vectorized)
train_confusion = confusion_matrix(Y_train, train_predictions)
train_precision = precision_score(Y_train, train_predictions)

test_confusion = confusion_matrix(Y_test, predictions)
test_precision = precision_score(Y_test, predictions)

print("Training Precision:", train_precision)
print("Training Confusion Matrix:")
print(train_confusion)

print("Test Precision:", test_precision)
print("Test Confusion Matrix:")
print(test_confusion)

model.predict(vectorizer.transform(
    [
        "congratulations, you became today's lucky winner",
        "1-month unlimited calls offer Activate now",
        "Ram wants your phone number",

    ])
            )